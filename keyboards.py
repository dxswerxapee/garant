from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, ReplyKeyboardMarkup, KeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder, ReplyKeyboardBuilder
from typing import List, Dict
from config import SUPPORT_USERNAME

class BotKeyboards:
    """–ö–ª–∞—Å—Å –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä –±–æ—Ç–∞"""
    
    @staticmethod
    def get_main_menu() -> ReplyKeyboardMarkup:
        """–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –±–æ—Ç–∞"""
        builder = ReplyKeyboardBuilder()
        
        builder.add(KeyboardButton(text="üíº –°–æ–∑–¥–∞—Ç—å —Å–¥–µ–ª–∫—É"))
        builder.add(KeyboardButton(text="üë§ –ü—Ä–æ—Ñ–∏–ª—å"))
        builder.add(KeyboardButton(text="üìã –ú–æ–∏ —Å–¥–µ–ª–∫–∏"))
        builder.add(KeyboardButton(text="üÜò –ü–æ–¥–¥–µ—Ä–∂–∫–∞"))
        
        builder.adjust(2, 2)
        
        return builder.as_markup(
            resize_keyboard=True,
            one_time_keyboard=False,
            input_field_placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ..."
        )
    
    @staticmethod
    def get_captcha_keyboard(options: List[str]) -> InlineKeyboardMarkup:
        """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –∫–∞–ø—á–∏"""
        builder = InlineKeyboardBuilder()
        
        for i, option in enumerate(options):
            builder.add(InlineKeyboardButton(
                text=option,
                callback_data=f"captcha_{i}"
            ))
        
        builder.adjust(2, 2)
        return builder.as_markup()
    
    @staticmethod
    def get_role_selection() -> InlineKeyboardMarkup:
        """–í—ã–±–æ—Ä —Ä–æ–ª–∏ –≤ —Å–¥–µ–ª–∫–µ"""
        builder = InlineKeyboardBuilder()
        
        builder.add(InlineKeyboardButton(
            text="üí∞ –ü–æ–∫—É–ø–∞—Ç–µ–ª—å",
            callback_data="role_buyer"
        ))
        builder.add(InlineKeyboardButton(
            text="üíé –ü—Ä–æ–¥–∞–≤–µ—Ü", 
            callback_data="role_seller"
        ))
        builder.add(InlineKeyboardButton(
            text="‚ùå –û—Ç–º–µ–Ω–∞",
            callback_data="cancel_deal_creation"
        ))
        
        builder.adjust(2, 1)
        return builder.as_markup()
    
    @staticmethod
    def get_payment_methods() -> InlineKeyboardMarkup:
        """–ú–µ—Ç–æ–¥—ã –æ–ø–ª–∞—Ç—ã"""
        builder = InlineKeyboardBuilder()
        
        builder.add(InlineKeyboardButton(
            text="üîó TRC20 USDT",
            callback_data="payment_TRC20"
        ))
        builder.add(InlineKeyboardButton(
            text="üíé TON",
            callback_data="payment_TON"
        ))
        builder.add(InlineKeyboardButton(
            text="‚ùå –û—Ç–º–µ–Ω–∞",
            callback_data="cancel_payment"
        ))
        
        builder.adjust(2, 1)
        return builder.as_markup()
    
    @staticmethod
    def get_deal_actions(deal_status: str = None) -> InlineKeyboardMarkup:
        """–î–µ–π—Å—Ç–≤–∏—è –≤ —Å–¥–µ–ª–∫–µ"""
        builder = InlineKeyboardBuilder()
        
        if deal_status == "payment_pending":
            builder.add(InlineKeyboardButton(
                text="‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –æ–ø–ª–∞—Ç—É",
                callback_data="confirm_payment"
            ))
        
        builder.add(InlineKeyboardButton(
            text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å —Å–¥–µ–ª–∫—É",
            callback_data="cancel_deal"
        ))
        
        if deal_status == "payment_pending":
            builder.add(InlineKeyboardButton(
                text="üîÑ –û–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å",
                callback_data="refresh_deal"
            ))
        
        builder.adjust(1)
        return builder.as_markup()
    
    @staticmethod
    def get_deal_confirmation(deal_code: str) -> InlineKeyboardMarkup:
        """–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –∫ —Å–¥–µ–ª–∫–µ"""
        builder = InlineKeyboardBuilder()
        
        builder.add(InlineKeyboardButton(
            text="‚úÖ –ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è",
            callback_data=f"join_deal_{deal_code}"
        ))
        builder.add(InlineKeyboardButton(
            text="‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å",
            callback_data="decline_deal"
        ))
        
        builder.adjust(1, 1)
        return builder.as_markup()
    
    @staticmethod
    def get_support_keyboard() -> InlineKeyboardMarkup:
        """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏"""
        builder = InlineKeyboardBuilder()
        
        builder.add(InlineKeyboardButton(
            text="üí¨ –ù–∞–ø–∏—Å–∞—Ç—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É",
            url=f"https://t.me/{SUPPORT_USERNAME}"
        ))
        builder.add(InlineKeyboardButton(
            text="üìã FAQ",
            callback_data="show_faq"
        ))
        builder.add(InlineKeyboardButton(
            text="üîô –ù–∞–∑–∞–¥",
            callback_data="back_to_menu"
        ))
        
        builder.adjust(1, 2)
        return builder.as_markup()
    
    @staticmethod
    def get_deals_list_keyboard(deals: List[Dict]) -> InlineKeyboardMarkup:
        """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å–æ —Å–ø–∏—Å–∫–æ–º —Å–¥–µ–ª–æ–∫"""
        builder = InlineKeyboardBuilder()
        
        for deal in deals[:10]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–µ 10 —Å–¥–µ–ª–æ–∫
            status_emoji = {
                'created': 'üü°',
                'joined': 'üîµ',
                'payment_pending': 'üü†',
                'completed': '‚úÖ',
                'cancelled': '‚ùå',
                'disputed': 'üî¥'
            }.get(deal['status'], '‚ùì')
            
            builder.add(InlineKeyboardButton(
                text=f"{status_emoji} {deal['deal_code']} - ${deal['amount_usd']}",
                callback_data=f"view_deal_{deal['id']}"
            ))
        
        builder.add(InlineKeyboardButton(
            text="üîô –ù–∞–∑–∞–¥",
            callback_data="back_to_menu"
        ))
        
        builder.adjust(1)
        return builder.as_markup()
    
    @staticmethod
    def get_cancel_keyboard() -> InlineKeyboardMarkup:
        """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –æ—Ç–º–µ–Ω—ã"""
        builder = InlineKeyboardBuilder()
        
        builder.add(InlineKeyboardButton(
            text="‚ùå –û—Ç–º–µ–Ω–∞",
            callback_data="cancel_action"
        ))
        
        return builder.as_markup()
    
    @staticmethod
    def get_admin_keyboard() -> InlineKeyboardMarkup:
        """–ê–¥–º–∏–Ω—Å–∫–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞"""
        builder = InlineKeyboardBuilder()
        
        builder.add(InlineKeyboardButton(
            text="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞",
            callback_data="admin_stats"
        ))
        builder.add(InlineKeyboardButton(
            text="üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏",
            callback_data="admin_users"
        ))
        builder.add(InlineKeyboardButton(
            text="üíº –°–¥–µ–ª–∫–∏",
            callback_data="admin_deals"
        ))
        builder.add(InlineKeyboardButton(
            text="üì¢ –†–∞—Å—Å—ã–ª–∫–∞",
            callback_data="admin_broadcast"
        ))
        
        builder.adjust(2, 2)
        return builder.as_markup()
    
    @staticmethod
    def get_qr_payment_keyboard() -> InlineKeyboardMarkup:
        """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –æ–ø–ª–∞—Ç—ã —Å QR"""
        builder = InlineKeyboardBuilder()
        
        builder.add(InlineKeyboardButton(
            text="‚úÖ –Ø –æ–ø–ª–∞—Ç–∏–ª",
            callback_data="payment_completed"
        ))
        builder.add(InlineKeyboardButton(
            text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å —Å–¥–µ–ª–∫—É",
            callback_data="cancel_deal"
        ))
        builder.add(InlineKeyboardButton(
            text="üîÑ –û–±–Ω–æ–≤–∏—Ç—å QR",
            callback_data="refresh_qr"
        ))
        
        builder.adjust(1, 2)
        return builder.as_markup()

# –°–æ–∑–¥–∞–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –∫–ª–∞—Å—Å–∞
keyboards = BotKeyboards()